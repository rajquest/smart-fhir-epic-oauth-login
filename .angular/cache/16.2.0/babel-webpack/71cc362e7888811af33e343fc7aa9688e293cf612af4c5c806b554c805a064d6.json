{"ast":null,"code":"(function () {\n  var utils = require(\"../utils\");\n  var core = require(\"./core\");\n  var id = function (x) {\n    return x;\n  };\n  var constantly = function (x) {\n    return function () {\n      return x;\n    };\n  };\n  var get_in = function (obj, path) {\n    return path.split('.').reduce(function (acc, x) {\n      if (acc == null || acc == undefined) {\n        return null;\n      }\n      return acc[x];\n    }, obj);\n  };\n  var evalPropsExpr = function (exp, args) {\n    var exps = exp.split('||').map(function (x) {\n      return x.trim().substring(1);\n    });\n    for (var i = 0; i < exps.length; i++) {\n      var res = get_in(args, exps[i]);\n      if (res) {\n        return res;\n      }\n    }\n    return null;\n  };\n  var evalExpr = function (exp, args) {\n    if (exp.indexOf(\":\") == 0) {\n      return evalPropsExpr(exp, args);\n    } else {\n      return exp;\n    }\n  };\n  var buildPathPart = function (pth, args) {\n    var k = evalExpr(pth.trim(), args);\n    if (k == null || k === undefined) {\n      throw new Error(\"Parameter \" + pth + \" is required: \" + JSON.stringify(args));\n    }\n    return k;\n  };\n\n  // path chaining function\n  // which return haldler wrapper: (h, cfg)->(args -> promise)\n  // it's chainable Path(\"baseUrl\").slash(\":type\").slash(\":id\").slash(\"_history\")(id, {})({id: 5, type: 'Patient'})\n  // and composable p0 = Path(\"baseUrl); p1 = p0.slash(\"path)\n  var Path = function (tkn, chain) {\n    //Chainable\n    var new_chain = function (args) {\n      return (chain && chain(args) + \"/\" || \"\") + buildPathPart(tkn, args);\n    };\n    var ch = core.Attribute('url', new_chain);\n    ch.slash = function (tkn) {\n      return Path(tkn, new_chain);\n    };\n    return ch;\n  };\n  exports.Path = Path;\n}).call(this);","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}